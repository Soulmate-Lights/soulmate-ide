# Commented while we wait for the new Electron versions to ship

name: Build/release

# Due to some massively odd decisions by GitHub around actions caching,
# we cannot key this build off a tag. It has to be master.
# Further down the build, we check whether the tag key is present.
on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ${{ matrix.os }}
    if: startsWith(github.event.head_commit.message, 'v')

    timeout-minutes: 30
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    strategy:
      matrix:
        os: [macos-10.15] #, windows-latest]
        # os: [macos-10.15, windows-latest]
        # os: [windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - uses: actions/setup-python@v2
        with:
          python-version: "3.x" # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: "x64" # optional x64 or x86. Defaults to x64 if not specified

      - name: Setup Xcode version
        if: startsWith(matrix.os, 'macos')
        uses: maxim-lobanov/setup-xcode@v1.2.1
        with:
          xcode-version: latest

      - name: Set up Xcode
        if: startsWith(matrix.os, 'macos')
        run: |
          sudo rm -rf /Library/Developer/CommandLineTools
          xcode-select -print-path
          sudo xcode-select --reset
          xcode-select -print-path

      - uses: actions/setup-python@v4
        with:
          python-version: "2.7"

        # This was a script we were using for double-checking xcode-select was right
        # curl -sL https://github.com/nodejs/node-gyp/raw/master/macOS_Catalina_acid_test.sh | bash

      - name: Install Node.js, NPM and Yarn for Mac
        if: startsWith(matrix.os, 'macos')
        uses: actions/setup-node@v1
        with:
          node-version: 15

      - name: Install Node.js, NPM and Yarn for Windows
        if: startsWith(matrix.os, 'windows')
        uses: actions/setup-node@v1
        with:
          node-version: 15

      # Cache both Yarn cache directory and node_modules
      - uses: c-hive/gha-yarn-cache@v1
      - uses: actions/cache@v2.1.0
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: yarn install
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: yarn --frozen-lockfile --ignore-engines

      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8

      - name: Build
        run: yarn build-electron

      - name: Release Mac
        if: startsWith(matrix.os, 'macos')
        run: "PYTHON_PATH=python2.7 PYTHON=python2.7 NODE_GYP_FORCE_PYTHON=python2.7 ./node_modules/.bin/electron-builder -m --publish always"
        env:
          API_KEY_ID: ${{ secrets.api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}
          CSC_LINK: ${{ secrets.mac_certs }}
          CSC_KEY_PASSWORD: ${{ secrets.mac_certs_password }}

      - name: Release Windows
        if: startsWith(matrix.os, 'windows')
        run: "yarn run electron-builder -w --publish always"

      - name: Setup Sentry CLI
        uses: mathrix-education/setup-sentry-cli@0.1.0
        with:
          version: latest # optional if 'latest'
          token: ${{ secrets.SENTRY_AUTH_TOKEN }} # from GitHub secrets
          organization: soulmate
          project: ide

      - name: Upload to Sentry
        run: "./sentry.sh"
        env:
          SENTRY_ORG: soulmate
          SENTRY_PROJECT: ide
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
